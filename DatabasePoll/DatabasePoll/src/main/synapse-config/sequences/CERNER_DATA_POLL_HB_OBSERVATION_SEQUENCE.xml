<?xml version="1.0" encoding="UTF-8"?>
<sequence name="CERNER_DATA_POLL_HB_OBSERVATION_SEQUENCE" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom">
        <property name="Start" value="Request Send"/>
    </log>
    <header name="Accept" scope="transport" value="application/json"/>
    <call>
        <endpoint>
            <http method="get" uri-template="http://localhost:8283/services/RDBMSDataService/allSelectedCernerPatients"/>
        </endpoint>
    </call>
    <iterate expression="//Patients/Patient">
        <target>
            <sequence>
                <property description="ID" expression="//patientId" name="id" scope="default" type="STRING"/>
                <!-- EPIC CONNECTOR INITIALIZATION -->
                <sequence key="CERNER_CONNECTOR_INITIALIZATION"/>
                <cerner.searchObservation>
                    <patient>{$ctx:id}</patient>
                    <code>http://loinc.org|718-7</code>
                </cerner.searchObservation>
                <property description="To" expression="json-eval($.entry)" name="issue" scope="default" type="STRING"/>
                <log level="custom">
                    <property expression="get-property('issue')" name="Issue"/>
                </log>
                <filter xpath="//entry">
                    <then>
                        <kafkaTransport.init>
                            <bootstrapServers>localhost:9092</bootstrapServers>
                            <keySerializerClass>org.apache.kafka.common.serialization.StringSerializer</keySerializerClass>
                            <valueSerializerClass>org.apache.kafka.common.serialization.StringSerializer</valueSerializerClass>
                        </kafkaTransport.init>
                        <property name="updatedReportCount" scope="default" type="DOUBLE" value="1.0"/>
                        <!-- Use CERNER_REPORT_FILTER Sequence for Filter According to Date -->
                        <filter xpath="$ctx:updatedReportCount >  0 ">
                            <then>
                                <log level="custom">
                                    <property expression="get-property('updatedReportCount')" name="Updated Report Count"/>
                                </log>
                                <log level="custom">
                                    <property expression="json-eval($.)" name="Log"/>
                                </log>
                                <kafkaTransport.publishMessages>
                                    <topic>hemoglobin-cerner</topic>
                                    <message>HelloKakfa</message>
                                    <partitionNo>0</partitionNo>
                                </kafkaTransport.publishMessages>
                            </then>
                            <else>
                                <log level="custom">
                                    <property expression="get-property('updatedReportCount')" name="Updated Report Count"/>
                                </log>
                            </else>
                        </filter>
                    </then>
                    <else>
                        <log level="custom">
                            <property name="CERNER_ERROR" value="NO VALID RESPONSE"/>
                        </log>
                        <drop/>
                    </else>
                </filter>
            </sequence>
        </target>
    </iterate>
    <respond/>
</sequence>
